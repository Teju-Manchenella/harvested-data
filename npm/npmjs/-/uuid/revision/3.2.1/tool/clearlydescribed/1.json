{
  "_metadata": {
    "type": "npm",
    "url": "cd:/npm/npmjs/-/uuid/3.2.1",
    "fetchedAt": "2018-02-18T06:43:46.055Z",
    "links": {
      "self": {
        "href": "urn:npm:npmjs:-:uuid:revision:3.2.1:tool:clearlydescribed:1",
        "type": "resource"
      },
      "siblings": {
        "href": "urn:npm:npmjs:-:uuid:revision:3.2.1:tool:clearlydescribed",
        "type": "collection"
      },
      "scancode": {
        "href": "urn:npm:npmjs:-:uuid:revision:3.2.1:tool:scancode",
        "type": "collection"
      },
      "source": {
        "href": "urn:git:github:kelektiv:node-uuid:revision:582a2a51449ec91896f40840d3ab77d6e377d628",
        "type": "resource"
      }
    },
    "version": 1,
    "processedAt": "2018-02-18T06:43:46.313Z"
  },
  "package.json": {
    "name": "uuid",
    "version": "3.2.1",
    "description": "RFC4122 (v1, v4, and v5) UUIDs",
    "keywords": [
      "uuid",
      "guid",
      "rfc4122"
    ],
    "license": "MIT",
    "bin": {
      "uuid": "./bin/uuid"
    },
    "devDependencies": {
      "eslint": "4.5.0",
      "mocha": "3.1.2",
      "runmd": "1.0.1",
      "standard-version": "4.2.0"
    },
    "scripts": {
      "test": "mocha test/test.js",
      "md": "runmd --watch --output=README.md README_js.md",
      "release": "standard-version",
      "prepare": "runmd --output=README.md README_js.md"
    },
    "browser": {
      "./lib/rng.js": "./lib/rng-browser.js",
      "./lib/sha1.js": "./lib/sha1-browser.js",
      "./lib/md5.js": "./lib/md5-browser.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/kelektiv/node-uuid.git"
    },
    "dependencies": {}
  },
  "registryData": {
    "_id": "uuid",
    "_rev": "371-541b56a9369632458de08124ed905acc",
    "name": "uuid",
    "description": "RFC4122 (v1, v4, and v5) UUIDs",
    "dist-tags": {
      "latest": "3.2.1"
    },
    "maintainers": [
      {
        "name": "broofa",
        "email": "robert@broofa.com"
      },
      {
        "name": "defunctzombie",
        "email": "shtylman@gmail.com"
      },
      {
        "name": "vvo",
        "email": "vincent.voyer@gmail.com"
      }
    ],
    "repository": {
      "type": "git",
      "url": "git+https://github.com/kelektiv/node-uuid.git"
    },
    "users": {
      "luk": true,
      "shtylman": true,
      "chilts": true,
      "appleboy": true,
      "davidrlee": true,
      "lych": true,
      "brentonhouse": true,
      "afollestad": true,
      "blackbunny": true,
      "matteospampani": true,
      "jakecadams": true,
      "yourhoneysky": true,
      "pospi": true,
      "esessoms": true,
      "kankungyip": true,
      "thomask33": true,
      "adamk": true,
      "chrisyipw": true,
      "tmypawa": true,
      "danharper": true,
      "erincinci": true,
      "lifecube": true,
      "yashprit": true,
      "moimikey": true,
      "ninozhang": true,
      "ysk8": true,
      "jesusgoku": true,
      "sonhuytran": true,
      "smd4": true,
      "defunctzombie": true,
      "etsit": true,
      "junjiansyu": true,
      "bpatel": true,
      "benburwell": true,
      "shipengyan": true,
      "piecioshka": true,
      "jueb": true,
      "qqqppp9998": true,
      "flozz": true,
      "hugnosis": true,
      "grantcarthew": true,
      "po": true,
      "aitorllj93": true,
      "parkerproject": true,
      "jasonpearson": true,
      "vwal": true,
      "ash": true,
      "procom": true,
      "almccann": true,
      "wfcookie": true,
      "fedor": true,
      "koulmomo": true,
      "monsterkodi": true,
      "orkisz": true,
      "mlohscheidt": true,
      "carlosvillademor": true,
      "ziflex": true,
      "shadowlong": true,
      "nomemires": true,
      "antanst": true,
      "zhoutk": true,
      "epdplus": true,
      "hecto932": true,
      "r3nya": true,
      "lwgojustgo": true,
      "evanyeung": true,
      "pavel.zubkou": true,
      "geooogle": true,
      "roman-io": true,
      "xufz": true,
      "rochejul": true,
      "ijidau": true,
      "456wyc": true,
      "markthethomas": true,
      "freebird": true,
      "ianpaschal": true,
      "clarenceho": true,
      "jlmorgan": true,
      "sasquatch": true,
      "segen": true,
      "gavaxiang": true,
      "nigel0913": true,
      "octetstream": true,
      "lestad": true,
      "shekharreddy": true,
      "bapinney": true,
      "sourcesoft": true,
      "gollojs": true,
      "reinoud": true,
      "zpoons": true,
      "scotchulous": true,
      "jlagunas": true,
      "jaxelson": true,
      "holly": true,
      "akarem": true,
      "apopek": true,
      "wenhsiaoyi": true,
      "ferchoriverar": true,
      "writech": true,
      "gildasdubois": true,
      "nhz.io": true,
      "blade254353074": true,
      "jtrh": true,
      "mauriciolauffer": true,
      "justdomepaul": true,
      "neo1": true,
      "leon740727": true,
      "mhaidarh": true,
      "tmurngon": true,
      "jez9999": true,
      "monolithed": true,
      "nohomey": true,
      "ckaatz": true,
      "diegorbaquero": true,
      "ahvonenj": true,
      "praxiq": true,
      "kavyababu7": true,
      "dzhou777": true,
      "caiofossa": true,
      "jamiechoi": true,
      "harumambur": true,
      "broofa": true,
      "wangnan0610": true,
      "ivan.marquez": true,
      "albertofdzm": true,
      "abuelwafa": true,
      "rumkin": true,
      "stretchgz": true,
      "shrike": true,
      "chaofeis": true,
      "nickleefly": true,
      "sachacr": true,
      "haihepeng": true,
      "wenbing": true,
      "kodekracker": true,
      "jian263994241": true,
      "bsara": true,
      "guzgarcia": true,
      "ferrari": true,
      "i3fox": true,
      "augiethornton": true,
      "mikestaub": true,
      "programmer.severson": true,
      "sgvinci": true,
      "appsparkler": true,
      "techmuch": true,
      "cblumer": true,
      "jk6": true,
      "tdevm": true,
      "max_devjs": true,
      "cbetancourt": true,
      "gdibble": true,
      "isenricho": true,
      "vchouhan": true,
      "danielye": true,
      "andfaulkner": true,
      "rocket0191": true,
      "satoru": true,
      "serge-nikitin": true,
      "alexcoady": true,
      "kaufmo": true,
      "miadzadfallah": true,
      "asaupup": true,
      "potentii": true,
      "xfloops": true,
      "n0f3": true,
      "marcobiedermann": true,
      "soulchainer": true,
      "leapm": true,
      "artjacob": true,
      "stevenvachon": true,
      "modood": true,
      "papasavva": true,
      "philipjc": true,
      "dkblay": true,
      "awhmandan": true,
      "sternelee": true,
      "walexstevens": true,
      "guurgle": true,
      "quafoo": true,
      "scott.m.sarsfield": true,
      "yswon": true,
      "pddivine": true,
      "subinvarghesein": true,
      "superchenney": true,
      "thomas.han": true,
      "kikna": true,
      "zand3rs": true,
      "heartnett": true,
      "simonja": true,
      "fengmiaosen": true,
      "someok": true,
      "raycharles": true,
      "xxsnake28": true,
      "icognivator": true,
      "zhyq0826": true,
      "partsunknown": true,
      "kkho595": true,
      "jybleau": true,
      "jamesbedont": true,
      "sundaycrafts": true,
      "yikuo": true,
      "shiva127": true,
      "jasonbbelcher": true,
      "flxa888": true,
      "jonaslomholdt": true,
      "vivek.vikhere": true,
      "whathejoe": true,
      "abhijitkalta": true,
      "wayn": true,
      "infernocloud": true,
      "gpuente": true,
      "leland-kwong": true,
      "isayme": true,
      "arnold-almeida": true,
      "xrush": true,
      "eserozvataf": true,
      "restuta": true,
      "atomgao": true,
      "rojo2": true,
      "gzg1500521074": true,
      "processbrain": true,
      "donggw2030521": true,
      "itcorp": true,
      "tomgao365": true,
      "yash3492": true,
      "mirkoj": true,
      "palsson": true,
      "xinwangwang": true,
      "keyn": true,
      "bart1208": true,
      "wozhizui": true,
      "tjg": true,
      "johntbales": true,
      "nuwaio": true,
      "bigglesatlarge": true,
      "tztz": true,
      "tjfwalker": true,
      "reggiezhang": true,
      "nonemoticoner": true,
      "jakedalus": true,
      "swedendrift": true,
      "astesio": true,
      "huangshijuan": true,
      "zuojiang": true,
      "wolfram77": true,
      "luffy84217": true,
      "iainhallam": true,
      "cainwatson": true,
      "shahabkhalvati": true,
      "leonardothibes": true,
      "vjenks": true,
      "jonathas": true,
      "edwardxyt": true,
      "razor164": true,
      "snowdream": true,
      "joelwallis": true,
      "leonardorb": true,
      "bluelover": true,
      "mgub": true,
      "somerayg": true,
      "laoshaw": true,
      "dtunes": true,
      "marcker": true,
      "warcrydoggie": true,
      "vparaskevas": true,
      "biao166": true,
      "xtx1130": true,
      "cschmitz81": true,
      "ganeshkbhat": true,
      "karzanosman984": true,
      "selenasong": true,
      "sammade": true,
      "obsessiveprogrammer": true,
      "cognivator": true,
      "marlberm2014": true,
      "he313572052": true,
      "ralphkay": true,
      "arefm": true,
      "jarrodhroberson": true,
      "hugovila": true,
      "reyronald": true,
      "akshay.vs9543": true,
      "yakumat": true,
      "davidnyhuis": true,
      "ashco": true,
      "wangxb": true,
      "ezeikel": true,
      "crwnvr": true,
      "horrorandtropics": true,
      "rikstam": true,
      "avivharuzi": true,
      "lex_nel": true,
      "esilva2902": true
    },
    "readme": "<!--\n  -- This file is auto-generated from README_js.md. Changes should be made there.\n  -->\n\n# uuid [![Build Status](https://secure.travis-ci.org/kelektiv/node-uuid.svg?branch=master)](http://travis-ci.org/kelektiv/node-uuid) #\n\nSimple, fast generation of [RFC4122](http://www.ietf.org/rfc/rfc4122.txt) UUIDS.\n\nFeatures:\n\n* Support for version 1, 3, 4 and 5 UUIDs\n* Cross-platform\n* Uses cryptographically-strong random number APIs (when available)\n* Zero-dependency, small footprint (... but not [this small](https://gist.github.com/982883))\n\n[**Deprecation warning**: The use of `require('uuid')` is deprecated and will not be\nsupported after version 3.x of this module.  Instead, use `require('uuid/[v1|v3|v4|v5]')` as shown in the examples below.]\n\n## Quickstart - CommonJS (Recommended)\n\n```shell\nnpm install uuid\n```\n\nThen generate your uuid version of choice ...\n\nVersion 1 (timestamp):\n\n```javascript\nconst uuidv1 = require('uuid/v1');\nuuidv1(); // ⇨ 'f64f2940-fae4-11e7-8c5f-ef356f279131'\n\n```\n\nVersion 3 (namespace):\n\n```javascript\nconst uuidv3 = require('uuid/v3');\n\n// ... using predefined DNS namespace (for domain names)\nuuidv3('hello.example.com', uuidv3.DNS); // ⇨ '9125a8dc-52ee-365b-a5aa-81b0b3681cf6'\n\n// ... using predefined URL namespace (for, well, URLs)\nuuidv3('http://example.com/hello', uuidv3.URL); // ⇨ 'c6235813-3ba4-3801-ae84-e0a6ebb7d138'\n\n// ... using a custom namespace\n//\n// Note: Custom namespaces should be a UUID string specific to your application!\n// E.g. the one here was generated using this modules `uuid` CLI.\nconst MY_NAMESPACE = '1b671a64-40d5-491e-99b0-da01ff1f3341';\nuuidv3('Hello, World!', MY_NAMESPACE); // ⇨ 'e8b5a51d-11c8-3310-a6ab-367563f20686'\n\n```\n\nVersion 4 (random):\n\n```javascript\nconst uuidv4 = require('uuid/v4');\nuuidv4(); // ⇨ '416ac246-e7ac-49ff-93b4-f7e94d997e6b'\n\n```\n\nVersion 5 (namespace):\n\n```javascript\nconst uuidv5 = require('uuid/v5');\n\n// ... using predefined DNS namespace (for domain names)\nuuidv5('hello.example.com', uuidv5.DNS); // ⇨ 'fdda765f-fc57-5604-a269-52a7df8164ec'\n\n// ... using predefined URL namespace (for, well, URLs)\nuuidv5('http://example.com/hello', uuidv5.URL); // ⇨ '3bbcee75-cecc-5b56-8031-b6641c1ed1f1'\n\n// ... using a custom namespace\n//\n// Note: Custom namespaces should be a UUID string specific to your application!\n// E.g. the one here was generated using this modules `uuid` CLI.\nconst MY_NAMESPACE = '1b671a64-40d5-491e-99b0-da01ff1f3341';\nuuidv5('Hello, World!', MY_NAMESPACE); // ⇨ '630eb68f-e0fa-5ecc-887a-7c7a62614681'\n\n```\n\n## Quickstart - Browser-ready Versions\n\nBrowser-ready versions of this module are available via [wzrd.in](https://github.com/jfhbrook/wzrd.in).\n\nFor version 1 uuids:\n\n```html\n<script src=\"http://wzrd.in/standalone/uuid%2Fv1@latest\"></script>\n<script>\nuuidv1(); // -> v1 UUID\n</script>\n```\n\nFor version 3 uuids:\n\n```html\n<script src=\"http://wzrd.in/standalone/uuid%2Fv3@latest\"></script>\n<script>\nuuidv3('http://example.com/hello', uuidv3.URL); // -> v3 UUID\n</script>\n```\n\nFor version 4 uuids:\n\n```html\n<script src=\"http://wzrd.in/standalone/uuid%2Fv4@latest\"></script>\n<script>\nuuidv4(); // -> v4 UUID\n</script>\n```\n\nFor version 5 uuids:\n\n```html\n<script src=\"http://wzrd.in/standalone/uuid%2Fv5@latest\"></script>\n<script>\nuuidv5('http://example.com/hello', uuidv5.URL); // -> v5 UUID\n</script>\n```\n\n## API\n\n### Version 1\n\n```javascript\nconst uuidv1 = require('uuid/v1');\n\n// Incantations\nuuidv1();\nuuidv1(options);\nuuidv1(options, buffer, offset);\n```\n\nGenerate and return a RFC4122 v1 (timestamp-based) UUID.\n\n* `options` - (Object) Optional uuid state to apply. Properties may include:\n\n  * `node` - (Array) Node id as Array of 6 bytes (per 4.1.6). Default: Randomly generated ID.  See note 1.\n  * `clockseq` - (Number between 0 - 0x3fff) RFC clock sequence.  Default: An internally maintained clockseq is used.\n  * `msecs` - (Number) Time in milliseconds since unix Epoch.  Default: The current time is used.\n  * `nsecs` - (Number between 0-9999) additional time, in 100-nanosecond units. Ignored if `msecs` is unspecified. Default: internal uuid counter is used, as per 4.2.1.2.\n\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing.\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nNote: The <node> id is generated guaranteed to stay constant for the lifetime of the current JS runtime. (Future versions of this module may use persistent storage mechanisms to extend this guarantee.)\n\nExample: Generate string UUID with fully-specified options\n\n```javascript\nconst v1options = {\n  node: [0x01, 0x23, 0x45, 0x67, 0x89, 0xab],\n  clockseq: 0x1234,\n  msecs: new Date('2011-11-01').getTime(),\n  nsecs: 5678\n};\nuuidv1(v1options); // ⇨ '710b962e-041c-11e1-9234-0123456789ab'\n\n```\n\nExample: In-place generation of two binary IDs\n\n```javascript\n// Generate two ids in an array\nconst arr = new Array();\nuuidv1(null, arr, 0);  // ⇨ [ 246, 87, 141, 176, 250, 228, 17, 231, 146, 52, 239, 53, 111, 39, 145, 49 ]\nuuidv1(null, arr, 16); // ⇨ [ 246, 87, 141, 176, 250, 228, 17, 231, 146, 52, 239, 53, 111, 39, 145, 49, 246, 87, 180, 192, 250, 228, 17, 231, 146, 52, 239, 53, 111, 39, 145, 49 ]\n\n```\n\n### Version 3\n\n```javascript\nconst uuidv3 = require('uuid/v3');\n\n// Incantations\nuuidv3(name, namespace);\nuuidv3(name, namespace, buffer);\nuuidv3(name, namespace, buffer, offset);\n```\n\nGenerate and return a RFC4122 v3 UUID.\n\n* `name` - (String | Array[]) \"name\" to create UUID with\n* `namespace` - (String | Array[]) \"namespace\" UUID either as a String or Array[16] of byte values\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing. Default = 0\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample:\n\n```javascript\nuuidv3('hello world', MY_NAMESPACE);  // ⇨ '042ffd34-d989-321c-ad06-f60826172424'\n\n```\n\n### Version 4\n\n```javascript\nconst uuidv4 = require('uuid/v4')\n\n// Incantations\nuuidv4();\nuuidv4(options);\nuuidv4(options, buffer, offset);\n```\n\nGenerate and return a RFC4122 v4 UUID.\n\n* `options` - (Object) Optional uuid state to apply. Properties may include:\n  * `random` - (Number[16]) Array of 16 numbers (0-255) to use in place of randomly generated values\n  * `rng` - (Function) Random # generator function that returns an Array[16] of byte values (0-255)\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing.\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample: Generate string UUID with predefined `random` values\n\n```javascript\nconst v4options = {\n  random: [\n    0x10, 0x91, 0x56, 0xbe, 0xc4, 0xfb, 0xc1, 0xea,\n    0x71, 0xb4, 0xef, 0xe1, 0x67, 0x1c, 0x58, 0x36\n  ]\n};\nuuidv4(v4options); // ⇨ '109156be-c4fb-41ea-b1b4-efe1671c5836'\n\n```\n\nExample: Generate two IDs in a single buffer\n\n```javascript\nconst buffer = new Array();\nuuidv4(null, buffer, 0);  // ⇨ [ 175, 10, 162, 184, 217, 255, 77, 139, 161, 80, 41, 200, 70, 238, 196, 250 ]\nuuidv4(null, buffer, 16); // ⇨ [ 175, 10, 162, 184, 217, 255, 77, 139, 161, 80, 41, 200, 70, 238, 196, 250, 75, 162, 105, 153, 48, 238, 77, 58, 169, 56, 158, 207, 106, 160, 47, 239 ]\n\n```\n\n### Version 5\n\n```javascript\nconst uuidv5 = require('uuid/v5');\n\n// Incantations\nuuidv5(name, namespace);\nuuidv5(name, namespace, buffer);\nuuidv5(name, namespace, buffer, offset);\n```\n\nGenerate and return a RFC4122 v5 UUID.\n\n* `name` - (String | Array[]) \"name\" to create UUID with\n* `namespace` - (String | Array[]) \"namespace\" UUID either as a String or Array[16] of byte values\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing. Default = 0\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample:\n\n```javascript\nuuidv5('hello world', MY_NAMESPACE);  // ⇨ '9f282611-e0fd-5650-8953-89c8e342da0b'\n\n```\n\n## Command Line\n\nUUIDs can be generated from the command line with the `uuid` command.\n\n```shell\n$ uuid\nddeb27fb-d9a0-4624-be4d-4615062daed4\n\n$ uuid v1\n02d37060-d446-11e7-a9fa-7bdae751ebe1\n```\n\nType `uuid --help` for usage details\n\n## Testing\n\n```shell\nnpm test\n```\n\n----\nMarkdown generated from [README_js.md](README_js.md) by [![RunMD Logo](http://i.imgur.com/h0FVyzU.png)](https://github.com/broofa/runmd)",
    "readmeFilename": "README.md",
    "keywords": [
      "uuid",
      "guid",
      "rfc4122"
    ],
    "contributors": [
      {
        "name": "Robert Kieffer",
        "email": "robert@broofa.com"
      },
      {
        "name": "Christoph Tavan",
        "email": "dev@tavan.de"
      },
      {
        "name": "AJ ONeal",
        "email": "coolaj86@gmail.com"
      },
      {
        "name": "Vincent Voyer",
        "email": "vincent@zeroload.net"
      },
      {
        "name": "Roman Shtylman",
        "email": "shtylman@gmail.com"
      }
    ],
    "homepage": "https://github.com/kelektiv/node-uuid#readme",
    "bugs": {
      "url": "https://github.com/kelektiv/node-uuid/issues"
    },
    "license": "MIT",
    "_attachments": {},
    "manifest": {
      "name": "uuid",
      "version": "3.2.1",
      "description": "RFC4122 (v1, v4, and v5) UUIDs",
      "keywords": [
        "uuid",
        "guid",
        "rfc4122"
      ],
      "license": "MIT",
      "bin": {
        "uuid": "./bin/uuid"
      },
      "devDependencies": {
        "eslint": "4.5.0",
        "mocha": "3.1.2",
        "runmd": "1.0.1",
        "standard-version": "4.2.0"
      },
      "scripts": {
        "test": "mocha test/test.js",
        "md": "runmd --watch --output=README.md README_js.md",
        "release": "standard-version",
        "prepare": "runmd --output=README.md README_js.md"
      },
      "browser": {
        "./lib/rng.js": "./lib/rng-browser.js",
        "./lib/sha1.js": "./lib/sha1-browser.js",
        "./lib/md5.js": "./lib/md5-browser.js"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/kelektiv/node-uuid.git"
      },
      "dependencies": {},
      "contributors": [
        {
          "name": "Robert Kieffer",
          "email": "robert@broofa.com"
        },
        {
          "name": "Christoph Tavan",
          "email": "dev@tavan.de"
        },
        {
          "name": "AJ ONeal",
          "email": "coolaj86@gmail.com"
        },
        {
          "name": "Vincent Voyer",
          "email": "vincent@zeroload.net"
        },
        {
          "name": "Roman Shtylman",
          "email": "shtylman@gmail.com"
        }
      ],
      "gitHead": "ce7d3176fc927ab83b4e29b8d5a37b7243ce3360",
      "bugs": {
        "url": "https://github.com/kelektiv/node-uuid/issues"
      },
      "homepage": "https://github.com/kelektiv/node-uuid#readme",
      "_id": "uuid@3.2.1",
      "_npmVersion": "5.5.1",
      "_nodeVersion": "7.10.1",
      "_npmUser": {
        "name": "broofa",
        "email": "robert@broofa.com"
      },
      "maintainers": [
        {
          "name": "broofa",
          "email": "robert@broofa.com"
        },
        {
          "name": "defunctzombie",
          "email": "shtylman@gmail.com"
        },
        {
          "name": "vvo",
          "email": "vincent.voyer@gmail.com"
        }
      ],
      "dist": {
        "integrity": "sha512-jZnMwlb9Iku/O3smGWvZhauCf6cvvpKi4BKRiliS3cxnI+Gz9j5MEpTz2UFuXiKPJocb7gnsLHwiS05ige5BEA==",
        "shasum": "12c528bb9d58d0b9265d9a2f6f0fe8be17ff1f14",
        "tarball": "https://registry.npmjs.org/uuid/-/uuid-3.2.1.tgz"
      },
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/uuid-3.2.1.tgz_1516124697652_0.3172094284091145"
      },
      "directories": {}
    },
    "releaseDate": "2018-01-16T17:44:57.871Z"
  },
  "sourceInfo": {
    "type": "git",
    "provider": "github",
    "url": "https://github.com/kelektiv/node-uuid",
    "revision": "582a2a51449ec91896f40840d3ab77d6e377d628",
    "path": null
  }
}