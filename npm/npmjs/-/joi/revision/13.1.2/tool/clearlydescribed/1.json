{
  "_metadata": {
    "type": "npm",
    "url": "cd:/npm/npmjs/-/joi/13.1.2",
    "fetchedAt": "2018-02-17T19:34:02.185Z",
    "links": {
      "self": {
        "href": "urn:npm:npmjs:-:joi:revision:13.1.2:tool:clearlydescribed:1",
        "type": "resource"
      },
      "siblings": {
        "href": "urn:npm:npmjs:-:joi:revision:13.1.2",
        "type": "collection"
      },
      "scancode": {
        "href": "urn:npm:npmjs:-:joi:revision:13.1.2:tool:scancode",
        "type": "collection"
      },
      "source": {
        "href": "urn:git:github:hapijs:joi:revision:615264d3262c21164ec1631902bbadbb2a812afe",
        "type": "resource"
      }
    },
    "version": 1,
    "processedAt": "2018-02-17T19:34:02.528Z"
  },
  "package.json": {
    "name": "joi",
    "description": "Object schema validation",
    "version": "13.1.2",
    "homepage": "https://github.com/hapijs/joi",
    "repository": "git://github.com/hapijs/joi",
    "main": "lib/index.js",
    "keywords": [
      "hapi",
      "schema",
      "validation"
    ],
    "engines": {
      "node": ">=8.9.0"
    },
    "dependencies": {
      "hoek": "5.x.x",
      "isemail": "3.x.x",
      "topo": "3.x.x"
    },
    "devDependencies": {
      "code": "5.x.x",
      "hapitoc": "1.x.x",
      "lab": "15.x.x"
    },
    "scripts": {
      "test": "lab -t 100 -a code -L",
      "test-debug": "lab -a code",
      "test-cov-html": "lab -r html -o coverage.html -a code",
      "toc": "hapitoc",
      "version": "npm run toc && git add API.md README.md"
    },
    "license": "BSD-3-Clause"
  },
  "registryData": {
    "_id": "joi",
    "_rev": "659-a5b243ee2e3d6d2b9e21e7e15fd71679",
    "name": "joi",
    "description": "Object schema validation",
    "dist-tags": {
      "latest": "13.1.2",
      "node-0.x": "6.10.1",
      "9-beta": "9.0.0-9"
    },
    "readme": "![joi Logo](https://raw.github.com/hapijs/joi/master/images/joi.png)\n\nObject schema description language and validator for JavaScript objects.\n\n[![npm version](https://badge.fury.io/js/joi.svg)](http://badge.fury.io/js/joi)\n[![Build Status](https://travis-ci.org/hapijs/joi.svg?branch=master)](https://travis-ci.org/hapijs/joi)\n[![NSP Status](https://nodesecurity.io/orgs/hapijs/projects/0394bf83-b5bc-410b-878c-e8cf1b92033e/badge)](https://nodesecurity.io/orgs/hapijs/projects/0394bf83-b5bc-410b-878c-e8cf1b92033e)\n[![Known Vulnerabilities](https://snyk.io/test/github/hapijs/joi/badge.svg)](https://snyk.io/test/github/hapijs/joi)\n\nLead Maintainer: [Nicolas Morel](https://github.com/marsup)\n\n# Introduction\n\nImagine you run facebook and you want visitors to sign up on the website with real names and not something like `l337_p@nda` in the first name field. How would you define the limitations of what can be inputted and validate it against the set rules?\n\nThis is joi, joi allows you to create *blueprints* or *schemas* for JavaScript objects (an object that stores information) to ensure *validation* of key information.\n\n# API\nSee the detailed [API Reference](https://github.com/hapijs/joi/blob/v13.1.2/API.md).\n\n# Example\n\n```javascript\nconst Joi = require('joi');\n\nconst schema = Joi.object().keys({\n    username: Joi.string().alphanum().min(3).max(30).required(),\n    password: Joi.string().regex(/^[a-zA-Z0-9]{3,30}$/),\n    access_token: [Joi.string(), Joi.number()],\n    birthyear: Joi.number().integer().min(1900).max(2013),\n    email: Joi.string().email()\n}).with('username', 'birthyear').without('password', 'access_token');\n\n// Return result.\nconst result = Joi.validate({ username: 'abc', birthyear: 1994 }, schema);\n// result.error === null -> valid\n\n// You can also pass a callback which will be called synchronously with the validation result.\nJoi.validate({ username: 'abc', birthyear: 1994 }, schema, function (err, value) { });  // err === null -> valid\n\n```\n\nThe above schema defines the following constraints:\n* `username`\n    * a required string\n    * must contain only alphanumeric characters\n    * at least 3 characters long but no more than 30\n    * must be accompanied by `birthyear`\n* `password`\n    * an optional string\n    * must satisfy the custom regex\n    * cannot appear together with `access_token`\n* `access_token`\n    * an optional, unconstrained string or number\n* `birthyear`\n    * an integer between 1900 and 2013\n* `email`\n    * a valid email address string\n\n# Usage\n\nUsage is a two steps process. First, a schema is constructed using the provided types and constraints:\n\n```javascript\nconst schema = {\n    a: Joi.string()\n};\n```\n\nNote that **joi** schema objects are immutable which means every additional rule added (e.g. `.min(5)`) will return a\nnew schema object.\n\nThen the value is validated against the schema:\n\n```javascript\nconst {error, value} = Joi.validate({ a: 'a string' }, schema);\n\n// or\n\nJoi.validate({ a: 'a string' }, schema, function (err, value) { });\n```\n\nIf the input is valid, then the error will be `null`, otherwise it will be an Error object.\n\nThe schema can be a plain JavaScript object where every key is assigned a **joi** type, or it can be a **joi** type directly:\n\n```javascript\nconst schema = Joi.string().min(10);\n```\n\nIf the schema is a **joi** type, the `schema.validate(value, callback)` can be called directly on the type. When passing a non-type schema object,\nthe module converts it internally to an object() type equivalent to:\n\n```javascript\nconst schema = Joi.object().keys({\n    a: Joi.string()\n});\n```\n\nWhen validating a schema:\n\n* Values (or keys in case of objects) are optional by default.\n\n    ```javascript\n    Joi.validate(undefined, Joi.string()); // validates fine\n    ```\n\n    To disallow this behavior, you can either set the schema as `required()`, or set `presence` to `\"required\"` when passing `options`:\n\n    ```javascript\n    Joi.validate(undefined, Joi.string().required());\n    // or\n    Joi.validate(undefined, Joi.string(), /* options */ { presence: \"required\" });\n    ```\n\n* Strings are utf-8 encoded by default.\n* Rules are defined in an additive fashion and evaluated in order after whitelist and blacklist checks.\n\n# Browsers\n\nJoi doesn't directly support browsers, but you could use [joi-browser](https://github.com/jeffbski/joi-browser) for an ES5 build of Joi that works in browsers, or as a source of inspiration for your own builds.\n",
    "maintainers": [
      {
        "email": "quitlahok@gmail.com",
        "name": "nlf"
      },
      {
        "email": "eran@hammer.io",
        "name": "hueniverse"
      },
      {
        "email": "nicolas@morel.io",
        "name": "marsup"
      },
      {
        "email": "wpreul@gmail.com",
        "name": "wyatt"
      }
    ],
    "repository": {
      "type": "git",
      "url": "git://github.com/hapijs/joi.git"
    },
    "users": {
      "paullang": true,
      "seldo": true,
      "krisb": true,
      "Marsup": true,
      "bigshai": true,
      "josecardozo": true,
      "alanshaw": true,
      "ruiquelhas": true,
      "fampinheiro": true,
      "wyatt": true,
      "berkeleytrue": true,
      "mkeedlinger": true,
      "hueniverse": true,
      "skopat": true,
      "stringparser": true,
      "eymen": true,
      "rhrn": true,
      "bbrown": true,
      "pmilan": true,
      "marsup": true,
      "andydrew": true,
      "peteut": true,
      "karmadude": true,
      "macmac": true,
      "ebiven": true,
      "jelhaouchi": true,
      "stanzhai": true,
      "onestone": true,
      "mdrobny": true,
      "markthethomas": true,
      "indigo0086": true,
      "amirmehmood": true,
      "jdpagley": true,
      "maximilianschmitt": true,
      "tunnckocore": true,
      "alexkval": true,
      "intuitivcloud": true,
      "rsp": true,
      "mastayoda": true,
      "nukisman": true,
      "mjaczynski": true,
      "buzuli": true,
      "vlkosinov": true,
      "denji": true,
      "fansgentle": true,
      "maskedcoder": true,
      "gerst20051": true,
      "chiefy": true,
      "dbendavid": true,
      "makay": true,
      "jalcine": true,
      "vwal": true,
      "sakai135": true,
      "temsa": true,
      "vbv": true,
      "emhagman": true,
      "nick_mcg": true,
      "urbantumbleweed": true,
      "programmer.severson": true,
      "antanst": true,
      "stany": true,
      "detj": true,
      "koulmomo": true,
      "ubi": true,
      "enriched": true,
      "vilnius-leopold": true,
      "cannap": true,
      "bojand": true,
      "redmonkeydf": true,
      "timdp": true,
      "tobiasnickel": true,
      "zayyar.phone": true,
      "ezodude": true,
      "charlotteis": true,
      "filearts": true,
      "lshearer": true,
      "brend": true,
      "preschian": true,
      "zoomyzoom": true,
      "nickeltobias": true,
      "kparkov": true,
      "roman-io": true,
      "djamseed": true,
      "ijidau": true,
      "igorissen": true,
      "rochejul": true,
      "evan.lecompte": true,
      "pankajpatel": true,
      "ddffx": true,
      "justinmchase": true,
      "yeremeyev": true,
      "ahme-t": true,
      "leonardorb": true,
      "ahmedelgabri": true,
      "devalphac": true,
      "earnubs": true,
      "antixrist": true,
      "ddkothari": true,
      "jerrywu": true,
      "mikestaub": true,
      "santihbc": true,
      "jawhitmarsh": true,
      "hibrahimsafak": true,
      "nonemoticoner": true,
      "amaynut": true,
      "abhisekp": true,
      "djk": true,
      "thomas.miele": true,
      "koskokos": true,
      "jmsherry": true,
      "sasquatch": true,
      "dominik.palo": true,
      "sloanb": true,
      "neo1": true,
      "thotk": true,
      "fredtma": true,
      "tmurngon": true,
      "esundahl": true,
      "nice_body": true,
      "uh-engineer": true,
      "diglididudeng": true,
      "fahadjadoon": true,
      "laudeon": true,
      "largepuma": true,
      "sachacr": true,
      "itonyyo": true,
      "jamiechoi": true,
      "oronnadiv": true,
      "novo": true,
      "narven": true,
      "kodekracker": true,
      "alex_japson": true,
      "sopepos": true,
      "david-ruzicka": true,
      "luhalvesbr": true,
      "georgesalkhouri": true,
      "tmshv": true,
      "dpjayasekara": true,
      "jmanuelrosa": true,
      "noderat": true,
      "xgheaven": true,
      "shooteram": true,
      "seangenabe": true,
      "shanewholloway": true,
      "panlw": true,
      "i3fox": true,
      "siyb": true,
      "gurunate": true,
      "suddi": true,
      "steeljuice": true,
      "zlatip": true,
      "stevepsharpe": true,
      "uldis.sturms": true,
      "igasho": true,
      "leonzhao": true,
      "jota": true,
      "aprilchen": true,
      "serge-nikitin": true,
      "lestad": true,
      "camus": true,
      "jordanskole": true,
      "dishs": true,
      "mistkafka": true,
      "alimaster": true,
      "rajiff": true,
      "mkoc": true,
      "astesio": true,
      "nicomf1982": true,
      "sinchang": true,
      "dankle": true,
      "ray0214": true,
      "domjtalbot": true,
      "pmbenjamin": true,
      "alvis": true,
      "papasavva": true,
      "evanshortiss": true,
      "xtinctspecies": true,
      "ziedtun": true,
      "nusmql": true,
      "pddivine": true,
      "oleg_tsyba": true,
      "traveltechymatt": true,
      "chetanbncoe": true,
      "lagden": true,
      "michaelfdias": true,
      "w.deprecated": true,
      "ahmedfarooki": true,
      "andrewhuffman": true,
      "ahto": true,
      "filipdanic": true,
      "dcarreroc": true,
      "jason0518": true,
      "adrienhobbs": true,
      "denwilliams": true,
      "srivkin": true,
      "kakaman": true,
      "tkalfigo": true,
      "bengi": true,
      "code-curious": true,
      "moosecouture": true,
      "erikvold": true,
      "ys_sidson_aidson": true,
      "nisimjoseph": true,
      "monczek": true,
      "bikeshedder": true,
      "ravipotnuru": true,
      "wayn": true,
      "emircanok": true,
      "benzhang": true,
      "nickleefly": true,
      "isayme": true,
      "daniel-lewis-bsc-hons": true,
      "godber": true,
      "majac": true,
      "processbrain": true,
      "ayoungh": true,
      "netoperatorwibby": true,
      "rahulraghavankklm": true,
      "quocnguyen": true,
      "ehrig": true,
      "tztz": true,
      "morsellif": true,
      "gzg1500521074": true,
      "jamesbedont": true,
      "srimukh": true,
      "vickykoblinski": true,
      "duartemendes": true,
      "nickeljew": true,
      "umidjons": true,
      "jmiziolek": true,
      "zuojiang": true,
      "gpuente": true,
      "krzych93": true,
      "charltoons": true,
      "vparaskevas": true,
      "danieljameskay": true,
      "eladkeyshawn": true,
      "thangkt": true,
      "touskar": true,
      "maxwelldu": true,
      "danday74": true,
      "yakumat": true,
      "hellotoby": true,
      "3xl": true,
      "rubenjose75": true,
      "gggauravgandhi": true,
      "banyudu": true,
      "seanlindsay101": true,
      "bholbrook73": true,
      "iceriver2": true,
      "akinhwan": true,
      "dwhieb": true,
      "obsessiveprogrammer": true,
      "sitnin": true,
      "natterstefan": true,
      "marcelitocs": true,
      "dsiddy": true,
      "irj": true,
      "larrychen": true,
      "zhenguo.zhao": true,
      "shuoshubao": true,
      "reyronald": true,
      "netweb": true,
      "orenschwartz": true
    },
    "readmeFilename": "README.md",
    "homepage": "https://github.com/hapijs/joi",
    "keywords": [
      "hapi",
      "schema",
      "validation"
    ],
    "bugs": {
      "url": "https://github.com/hapijs/joi/issues"
    },
    "license": "BSD-3-Clause",
    "_attachments": {},
    "manifest": {
      "name": "joi",
      "description": "Object schema validation",
      "version": "13.1.2",
      "homepage": "https://github.com/hapijs/joi",
      "repository": {
        "type": "git",
        "url": "git://github.com/hapijs/joi.git"
      },
      "main": "lib/index.js",
      "keywords": [
        "hapi",
        "schema",
        "validation"
      ],
      "engines": {
        "node": ">=8.9.0"
      },
      "dependencies": {
        "hoek": "5.x.x",
        "isemail": "3.x.x",
        "topo": "3.x.x"
      },
      "devDependencies": {
        "code": "5.x.x",
        "hapitoc": "1.x.x",
        "lab": "15.x.x"
      },
      "scripts": {
        "test": "lab -t 100 -a code -L",
        "test-debug": "lab -a code",
        "test-cov-html": "lab -r html -o coverage.html -a code",
        "toc": "hapitoc",
        "version": "npm run toc && git add API.md README.md"
      },
      "license": "BSD-3-Clause",
      "gitHead": "97fa7646d568245d15c8981282a56d721414f28d",
      "bugs": {
        "url": "https://github.com/hapijs/joi/issues"
      },
      "_id": "joi@13.1.2",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "marsup",
        "email": "nicolas@morel.io"
      },
      "dist": {
        "integrity": "sha512-bZZSQYW5lPXenOfENvgCBPb9+H6E6MeNWcMtikI04fKphj5tvFL9TOb+H2apJzbCrRw/jebjTH8z6IHLpBytGg==",
        "shasum": "b2db260323cc7f919fafa51e09e2275bd089a97e",
        "tarball": "https://registry.npmjs.org/joi/-/joi-13.1.2.tgz"
      },
      "maintainers": [
        {
          "email": "quitlahok@gmail.com",
          "name": "nlf"
        },
        {
          "email": "eran@hammer.io",
          "name": "hueniverse"
        },
        {
          "email": "nicolas@morel.io",
          "name": "marsup"
        },
        {
          "email": "wpreul@gmail.com",
          "name": "wyatt"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/joi-13.1.2.tgz_1517599419155_0.6128392068203539"
      },
      "directories": {}
    },
    "releaseDate": "2018-02-02T19:23:40.226Z"
  },
  "sourceInfo": {
    "type": "git",
    "provider": "github",
    "url": "https://github.com/hapijs/joi",
    "revision": "615264d3262c21164ec1631902bbadbb2a812afe",
    "path": null
  }
}