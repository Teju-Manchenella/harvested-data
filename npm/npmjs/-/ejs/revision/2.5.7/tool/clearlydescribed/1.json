{
  "_metadata": {
    "type": "npm",
    "url": "cd:/npm/npmjs/-/ejs/2.5.7",
    "fetchedAt": "2018-02-17T19:34:04.762Z",
    "links": {
      "self": {
        "href": "urn:npm:npmjs:-:ejs:revision:2.5.7:tool:clearlydescribed:1",
        "type": "resource"
      },
      "siblings": {
        "href": "urn:npm:npmjs:-:ejs:revision:2.5.7",
        "type": "collection"
      },
      "scancode": {
        "href": "urn:npm:npmjs:-:ejs:revision:2.5.7:tool:scancode",
        "type": "collection"
      },
      "source": {
        "href": "urn:git:github:mde:ejs:revision:2247fb3aefa9b99a0b58d101b79f4a5063250b65",
        "type": "resource"
      }
    },
    "version": 1,
    "processedAt": "2018-02-17T19:34:04.999Z"
  },
  "package.json": null,
  "registryData": {
    "_id": "ejs",
    "_rev": "460-136602ba7483cfc2104524da19b93f84",
    "name": "ejs",
    "description": "Embedded JavaScript templates",
    "dist-tags": {
      "latest": "2.5.7"
    },
    "maintainers": [
      {
        "name": "mde",
        "email": "mde@fleegix.org"
      }
    ],
    "author": {
      "name": "Matthew Eernisse",
      "email": "mde@fleegix.org",
      "url": "http://fleegix.org"
    },
    "users": {
      "naholyr": true,
      "fgribreau": true,
      "m42am": true,
      "dubban": true,
      "ljharb": true,
      "cj.nichols": true,
      "maxmaximov": true,
      "mcwhittemore": true,
      "chrisweb": true,
      "adamrenny": true,
      "einfallstoll": true,
      "mackenziestarr": true,
      "fmm": true,
      "evkline": true,
      "biggora": true,
      "brandtabbott": true,
      "voxpelli": true,
      "jimnox": true,
      "matteospampani": true,
      "undashes": true,
      "lpgray": true,
      "dofy": true,
      "boustanihani": true,
      "karthickt": true,
      "writech": true,
      "louxiaojian": true,
      "jianhua": true,
      "saifee": true,
      "kewin": true,
      "sasquatch": true,
      "tedyhy": true,
      "gregvanbrug": true,
      "piotr23": true,
      "lamentchina": true,
      "pedrozgz": true,
      "alexandermac": true,
      "earthling0": true,
      "damocles": true,
      "iisii": true,
      "x_soth": true,
      "j3kz": true,
      "timothygu": true,
      "vchouhan": true,
      "trusktr": true,
      "manxisuo": true,
      "truonghuutien": true,
      "vboctor": true,
      "gabrielmedina": true,
      "chadwatson": true,
      "reno184": true,
      "nickleefly": true,
      "jamesulph": true,
      "sm0ck1": true,
      "oheard": true,
      "qqqppp9998": true,
      "staraple": true,
      "dac2205": true,
      "junjiansyu": true,
      "damianof": true,
      "theveil": true,
      "blind__man": true,
      "tudou": true,
      "ernie55ernie": true,
      "sharp": true,
      "gochomugo": true,
      "doombuddha": true,
      "csbun": true,
      "buzzalderaan": true,
      "stretchgz": true,
      "incsw": true,
      "freshlogic": true,
      "dbck": true,
      "maskedcoder": true,
      "pensierinmusica": true,
      "2dxgujun": true,
      "valeriu-zdrobau": true,
      "ssh0702": true,
      "yhui02": true,
      "z4tech": true,
      "jybleau": true,
      "iolo": true,
      "nickeltobias": true,
      "jslite": true,
      "blessdyb": true,
      "rackyrose": true,
      "chadyred": true,
      "dereklakin": true,
      "raskawa": true,
      "raisiqueira": true,
      "hyde2able": true,
      "stany": true,
      "ysk8": true,
      "cfleschhut": true,
      "jtsky": true,
      "tobiasnickel": true,
      "ryandu": true,
      "wangnan0610": true,
      "msjcaetano": true,
      "dskecse": true,
      "evanyeung": true,
      "hyteer": true,
      "dittodhole": true,
      "shanemileham": true,
      "wzbg": true,
      "monjer": true,
      "cslater": true,
      "coalesce": true,
      "a3.ivanenko": true,
      "sammok2003": true,
      "erikvold": true,
      "xufz": true,
      "zhenzhuquan": true,
      "ghe1219": true,
      "peunzhang": true,
      "xgheaven": true,
      "juangotama": true,
      "asm2hex": true,
      "kimkee": true,
      "demiurgosoft": true,
      "qmmr": true,
      "trenthm": true,
      "isik": true,
      "snarky": true,
      "pablo.tavarez": true,
      "dmsanchez86": true,
      "sylvain261": true,
      "fonologico": true,
      "markthethomas": true,
      "leogoncha": true,
      "pmasa": true,
      "aisin": true,
      "fassetar": true,
      "mark24code": true,
      "456wyc": true,
      "marcobiedermann": true,
      "angrykoala": true,
      "lhard": true,
      "fengmiaosen": true,
      "sopov": true,
      "i.vispyanskiy": true,
      "aitoralejandro": true,
      "shekharreddy": true,
      "ferrari": true,
      "apopek": true,
      "moueza": true,
      "abuddington": true,
      "nilz3ro": true,
      "netdex": true,
      "largepuma": true,
      "lmanukyan": true,
      "monczek": true,
      "duck102017": true,
      "ga1989": true,
      "writeosahon": true,
      "13lank.null": true,
      "hodd": true,
      "olonam": true,
      "fahadjadoon": true,
      "isenricho": true,
      "langri-sha": true,
      "soulevans07": true,
      "joechow": true,
      "techyone": true,
      "zhengyaing": true,
      "semo100": true,
      "adamdreszer": true,
      "proxy": true,
      "soundtemple": true,
      "bool": true,
      "strydom": true,
      "gui0704": true,
      "smokinhuzi": true,
      "ww522413622": true,
      "wfcookie": true,
      "niudi": true,
      "flozz": true,
      "yong_a": true,
      "danielye": true,
      "adeelp": true,
      "kodekracker": true,
      "makediff": true,
      "zllzixi": true,
      "moonnoire": true,
      "evdokimovm": true,
      "hugovila": true,
      "shakakira": true,
      "huarse": true,
      "pavelusov": true,
      "ab.moon": true,
      "akamaozu": true,
      "beatwinthewave": true,
      "fxkraus": true,
      "tomchao": true,
      "jk6": true,
      "quidama": true,
      "flaviomarcioti": true,
      "sadmansamee": true,
      "rocket0191": true,
      "atulmy": true,
      "nguyenxuantruong.dev": true,
      "maxwelldu": true,
      "danielpavelic": true,
      "milan322": true,
      "jamesllen": true,
      "ray0214": true,
      "sibawite": true,
      "linfeng9008": true,
      "karzanosman984": true,
      "alaeddine17": true,
      "xiaoyiyu": true,
      "jmkim9": true,
      "kontrax": true,
      "jamesbedont": true,
      "zenfeder": true,
      "greganswer": true,
      "jamesczekaj": true,
      "stone-jin": true,
      "iceriver2": true,
      "u19950930": true,
      "aabbcce": true,
      "piotrposzytek": true,
      "zj1988": true,
      "asj1992": true,
      "zerouikit": true,
      "lx70770": true,
      "winfredzhu": true,
      "_~": true,
      "ericteng177": true,
      "scalz": true,
      "dm7": true,
      "marinear212": true,
      "801s": true,
      "ldq-first": true,
      "cooboor": true,
      "npmmurali": true,
      "asfrom30": true,
      "snowdream": true,
      "deivbid": true,
      "waldrupm": true,
      "ecelis": true,
      "guogai": true,
      "maddas": true,
      "chrisx": true,
      "junyeong": true,
      "daniel-lewis-bsc-hons": true,
      "wallenberg12": true,
      "yun814752288": true,
      "djx474068077": true,
      "chenyingxuan1996": true,
      "dh19911021": true,
      "luffy84217": true,
      "gamersdelight": true,
      "npmrud5g": true,
      "yyll": true,
      "owillo": true,
      "josep1992": true,
      "leakon": true,
      "adrian.arroyocalle": true,
      "danday74": true,
      "luckyulin": true,
      "husida": true,
      "zh770797477": true,
      "manavsaxena": true,
      "parsea": true,
      "asadm2706": true,
      "tranceyos2419": true,
      "avivharuzi": true,
      "thomashzhu": true,
      "gabriel_hansson": true,
      "pftom": true,
      "madeo": true,
      "ashco": true,
      "ryaned": true,
      "danielblair": true,
      "lonespear": true,
      "he313572052": true,
      "lqweb": true,
      "rabahtahraoui": true,
      "dadoumda": true,
      "midascreed": true,
      "coton_chen": true,
      "theonlyartz": true,
      "gpmetheny": true,
      "biiu": true,
      "diogocapela": true
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/mde/ejs.git"
    },
    "readme": "# EJS\n\nEmbedded JavaScript templates\n\n[![Build Status](https://img.shields.io/travis/mde/ejs/master.svg?style=flat)](https://travis-ci.org/mde/ejs)\n[![Developing Dependencies](https://img.shields.io/david/dev/mde/ejs.svg?style=flat)](https://david-dm.org/mde/ejs?type=dev)\n[![Known Vulnerabilities](https://snyk.io/test/npm/ejs/badge.svg?style=flat-square)](https://snyk.io/test/npm/ejs)\n\n## Installation\n\n```bash\n$ npm install ejs\n```\n\n## Features\n\n  * Control flow with `<% %>`\n  * Escaped output with `<%= %>` (escape function configurable)\n  * Unescaped raw output with `<%- %>`\n  * Newline-trim mode ('newline slurping') with `-%>` ending tag\n  * Whitespace-trim mode (slurp all whitespace) for control flow with `<%_ _%>`\n  * Custom delimiters (e.g., use `<? ?>` instead of `<% %>`)\n  * Includes\n  * Client-side support\n  * Static caching of intermediate JavaScript\n  * Static caching of templates\n  * Complies with the [Express](http://expressjs.com) view system\n\n## Example\n\n```html\n<% if (user) { %>\n  <h2><%= user.name %></h2>\n<% } %>\n```\n\nTry EJS online at: https://ionicabizau.github.io/ejs-playground/.\n\n## Usage\n\n```javascript\nvar template = ejs.compile(str, options);\ntemplate(data);\n// => Rendered HTML string\n\nejs.render(str, data, options);\n// => Rendered HTML string\n\nejs.renderFile(filename, data, options, function(err, str){\n    // str => Rendered HTML string\n});\n```\n\nIt is also possible to use `ejs.render(dataAndOptions);` where you pass\neverything in a single object. In that case, you'll end up with local variables\nfor all the passed options. However, be aware that your code could break if we\nadd an option with the same name as one of your data object's properties.\nTherefore, we do not recommend using this shortcut.\n\n## Options\n\n  - `cache`           Compiled functions are cached, requires `filename`\n  - `filename`        The name of the file being rendered. Not required if you\n    are using `renderFile()`. Used by `cache` to key caches, and for includes.\n  - `root`            Set project root for includes with an absolute path (/file.ejs).\n  - `context`         Function execution context\n  - `compileDebug`    When `false` no debug instrumentation is compiled\n  - `client`          When `true`, compiles a function that can be rendered\n    in the browser without needing to load the EJS Runtime\n    ([ejs.min.js](https://github.com/mde/ejs/releases/latest)).\n  - `delimiter`       Character to use with angle brackets for open/close\n  - `debug`           Output generated function body\n  - `strict`          When set to `true`, generated function is in strict mode\n  - `_with`           Whether or not to use `with() {}` constructs. If `false` then the locals will be stored in the `locals` object. Set to `false` in strict mode.\n  - `localsName`      Name to use for the object storing local variables when not using `with` Defaults to `locals`\n  - `rmWhitespace`    Remove all safe-to-remove whitespace, including leading\n    and trailing whitespace. It also enables a safer version of `-%>` line\n    slurping for all scriptlet tags (it does not strip new lines of tags in\n    the middle of a line).\n  - `escape`          The escaping function used with `<%=` construct. It is\n    used in rendering and is `.toString()`ed in the generation of client functions. (By default escapes XML).\n\nThis project uses [JSDoc](http://usejsdoc.org/). For the full public API\ndocumentation, clone the repository and run `npm run doc`. This will run JSDoc\nwith the proper options and output the documentation to `out/`. If you want\nthe both the public & private API docs, run `npm run devdoc` instead.\n\n## Tags\n\n  - `<%`              'Scriptlet' tag, for control-flow, no output\n  - `<%_`             'Whitespace Slurping' Scriptlet tag, strips all whitespace before it\n  - `<%=`             Outputs the value into the template (escaped)\n  - `<%-`             Outputs the unescaped value into the template\n  - `<%#`             Comment tag, no execution, no output\n  - `<%%`             Outputs a literal '<%'\n  - `%%>`             Outputs a literal '%>'\n  - `%>`              Plain ending tag\n  - `-%>`             Trim-mode ('newline slurp') tag, trims following newline\n  - `_%>`             'Whitespace Slurping' ending tag, removes all whitespace after it\n\nFor the full syntax documentation, please see [docs/syntax.md](https://github.com/mde/ejs/blob/master/docs/syntax.md).\n\n## Includes\n\nIncludes either have to be an absolute path, or, if not, are assumed as\nrelative to the template with the `include` call. For example if you are\nincluding `./views/user/show.ejs` from `./views/users.ejs` you would\nuse `<%- include('user/show') %>`.\n\nYou must specify the `filename` option for the template with the `include`\ncall unless you are using `renderFile()`.\n\nYou'll likely want to use the raw output tag (`<%-`) with your include to avoid\ndouble-escaping the HTML output.\n\n```html\n<ul>\n  <% users.forEach(function(user){ %>\n    <%- include('user/show', {user: user}) %>\n  <% }); %>\n</ul>\n```\n\nIncludes are inserted at runtime, so you can use variables for the path in the\n`include` call (for example `<%- include(somePath) %>`). Variables in your\ntop-level data object are available to all your includes, but local variables\nneed to be passed down.\n\nNOTE: Include preprocessor directives (`<% include user/show %>`) are\nstill supported.\n\n## Custom delimiters\n\nCustom delimiters can be applied on a per-template basis, or globally:\n\n```javascript\nvar ejs = require('ejs'),\n    users = ['geddy', 'neil', 'alex'];\n\n// Just one template\nejs.render('<?= users.join(\" | \"); ?>', {users: users}, {delimiter: '?'});\n// => 'geddy | neil | alex'\n\n// Or globally\nejs.delimiter = '$';\nejs.render('<$= users.join(\" | \"); $>', {users: users});\n// => 'geddy | neil | alex'\n```\n\n## Caching\n\nEJS ships with a basic in-process cache for caching the intermediate JavaScript\nfunctions used to render templates. It's easy to plug in LRU caching using\nNode's `lru-cache` library:\n\n```javascript\nvar ejs = require('ejs')\n  , LRU = require('lru-cache');\nejs.cache = LRU(100); // LRU cache with 100-item limit\n```\n\nIf you want to clear the EJS cache, call `ejs.clearCache`. If you're using the\nLRU cache and need a different limit, simple reset `ejs.cache` to a new instance\nof the LRU.\n\n## Custom FileLoader\n\nThe default file loader is `fs.readFileSync`, if you want to customize it, you can set ejs.fileLoader.\n\n```javascript\nvar ejs = require('ejs');\nvar myFileLoad = function (filePath) {\n  return 'myFileLoad: ' + fs.readFileSync(filePath);\n};\n\nejs.fileLoader = myFileLoad;\n```\n\nWith this feature, you can preprocess the template before reading it.\n\n## Layouts\n\nEJS does not specifically support blocks, but layouts can be implemented by\nincluding headers and footers, like so:\n\n\n```html\n<%- include('header') -%>\n<h1>\n  Title\n</h1>\n<p>\n  My page\n</p>\n<%- include('footer') -%>\n```\n\n## Client-side support\n\nGo to the [Latest Release](https://github.com/mde/ejs/releases/latest), download\n`./ejs.js` or `./ejs.min.js`. Alternately, you can compile it yourself by cloning\nthe repository and running `jake build` (or `$(npm bin)/jake build` if jake is\nnot installed globally).\n\nInclude one of these files on your page, and `ejs` should be available globally.\n\n### Example\n\n```html\n<div id=\"output\"></div>\n<script src=\"ejs.min.js\"></script>\n<script>\n  var people = ['geddy', 'neil', 'alex'],\n      html = ejs.render('<%= people.join(\", \"); %>', {people: people});\n  // With jQuery:\n  $('#output').html(html);\n  // Vanilla JS:\n  document.getElementById('output').innerHTML = html;\n</script>\n```\n\n### Caveats\n\nMost of EJS will work as expected; however, there are a few things to note:\n\n1. Obviously, since you do not have access to the filesystem, `ejs.renderFile()` won't work.\n2. For the same reason, `include`s do not work unless you use an `IncludeCallback`. Here is an example:\n  ```javascript\n  var str = \"Hello <%= include('file', {person: 'John'}); %>\",\n      fn = ejs.compile(str, {client: true});\n\n  fn(data, null, function(path, d){ // IncludeCallback\n    // path -> 'file'\n    // d -> {person: 'John'}\n    // Put your code here\n    // Return the contents of file as a string\n  }); // returns rendered string\n  ```\n\n## Related projects\n\nThere are a number of implementations of EJS:\n\n * TJ's implementation, the v1 of this library: https://github.com/tj/ejs\n * Jupiter Consulting's EJS: http://www.embeddedjs.com/\n * EJS Embedded JavaScript Framework on Google Code: https://code.google.com/p/embeddedjavascript/\n * Sam Stephenson's Ruby implementation: https://rubygems.org/gems/ejs\n * Erubis, an ERB implementation which also runs JavaScript: http://www.kuwata-lab.com/erubis/users-guide.04.html#lang-javascript\n\n## License\n\nLicensed under the Apache License, Version 2.0\n(<http://www.apache.org/licenses/LICENSE-2.0>)\n\n- - -\nEJS Embedded JavaScript templates copyright 2112\nmde@fleegix.org.\n",
    "readmeFilename": "README.md",
    "homepage": "https://github.com/mde/ejs",
    "keywords": [
      "template",
      "engine",
      "ejs"
    ],
    "bugs": {
      "url": "https://github.com/mde/ejs/issues"
    },
    "contributors": [
      {
        "name": "Timothy Gu",
        "email": "timothygu99@gmail.com",
        "url": "https://timothygu.github.io"
      }
    ],
    "license": "Apache-2.0",
    "_attachments": {},
    "manifest": {
      "name": "ejs",
      "description": "Embedded JavaScript templates",
      "keywords": [
        "template",
        "engine",
        "ejs"
      ],
      "version": "2.5.7",
      "author": {
        "name": "Matthew Eernisse",
        "email": "mde@fleegix.org",
        "url": "http://fleegix.org"
      },
      "contributors": [
        {
          "name": "Timothy Gu",
          "email": "timothygu99@gmail.com",
          "url": "https://timothygu.github.io"
        }
      ],
      "license": "Apache-2.0",
      "main": "./lib/ejs.js",
      "repository": {
        "type": "git",
        "url": "git://github.com/mde/ejs.git"
      },
      "bugs": {
        "url": "https://github.com/mde/ejs/issues"
      },
      "homepage": "https://github.com/mde/ejs",
      "dependencies": {},
      "devDependencies": {
        "browserify": "^13.0.1",
        "eslint": "^3.0.0",
        "git-directory-deploy": "^1.5.1",
        "istanbul": "~0.4.3",
        "jake": "^8.0.0",
        "jsdoc": "^3.4.0",
        "lru-cache": "^4.0.1",
        "mocha": "^3.0.2",
        "uglify-js": "^2.6.2"
      },
      "engines": {
        "node": ">=0.10.0"
      },
      "scripts": {
        "test": "jake test",
        "lint": "eslint \"**/*.js\" Jakefile",
        "coverage": "istanbul cover node_modules/mocha/bin/_mocha",
        "doc": "jake doc",
        "devdoc": "jake doc[dev]"
      },
      "_id": "ejs@2.5.7",
      "_shasum": "cc872c168880ae3c7189762fd5ffc00896c9518a",
      "_resolved": "file:pkg/ejs-v2.5.7.tar.gz",
      "_from": "pkg/ejs-v2.5.7.tar.gz",
      "_npmVersion": "3.10.8",
      "_nodeVersion": "6.9.1",
      "_npmUser": {
        "name": "mde",
        "email": "mde@fleegix.org"
      },
      "dist": {
        "shasum": "cc872c168880ae3c7189762fd5ffc00896c9518a",
        "tarball": "https://registry.npmjs.org/ejs/-/ejs-2.5.7.tgz"
      },
      "maintainers": [
        {
          "name": "mde",
          "email": "mde@fleegix.org"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ejs-2.5.7.tgz_1501385411193_0.3807816591579467"
      },
      "directories": {}
    },
    "releaseDate": "2017-07-30T03:30:11.422Z"
  },
  "sourceInfo": {
    "type": "git",
    "provider": "github",
    "url": "https://github.com/mde/ejs",
    "revision": "2247fb3aefa9b99a0b58d101b79f4a5063250b65",
    "path": null
  }
}